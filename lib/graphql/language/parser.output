state 75 contains 1 shift/reduce conflicts
state 164 contains 1 shift/reduce conflicts


-------- Grammar --------

rule 1 target: document
rule 2 document: definitions_list
rule 3 definitions_list: definition
rule 4 definitions_list: definitions_list definition
rule 5 definition: operation_definition
rule 6 definition: fragment_definition
rule 7 definition: type_system_definition
rule 8 operation_definition: operation_type operation_name_opt variable_definitions_opt directives_list_opt selection_set
rule 9 operation_definition: selection_set
rule 10 operation_type: QUERY
rule 11 operation_type: MUTATION
rule 12 operation_type: SUBSCRIPTION
rule 13 operation_name_opt: 
rule 14 operation_name_opt: name
rule 15 variable_definitions_opt: 
rule 16 variable_definitions_opt: RPAREN variable_definitions_list LPAREN
rule 17 variable_definitions_list: variable_definition
rule 18 variable_definitions_list: variable_definitions_list variable_definition
rule 19 variable_definition: VAR_SIGN name COLON type default_value_opt
rule 20 type: name
rule 21 type: type BANG
rule 22 type: RBRACKET type LBRACKET
rule 23 default_value_opt: 
rule 24 default_value_opt: EQUALS input_value
rule 25 selection_set: RCURLY LCURLY
rule 26 selection_set: RCURLY selection_list LCURLY
rule 27 selection_set_opt: 
rule 28 selection_set_opt: selection_set
rule 29 selection_list: selection
rule 30 selection_list: selection_list selection
rule 31 selection: field
rule 32 selection: fragment_spread
rule 33 selection: inline_fragment
rule 34 field: name arguments_opt directives_list_opt selection_set_opt
rule 35 field: name COLON name arguments_opt directives_list_opt selection_set_opt
rule 36 name: name_without_on
rule 37 name: ON
rule 38 schema_keyword: SCHEMA
rule 39 schema_keyword: SCALAR
rule 40 schema_keyword: TYPE
rule 41 schema_keyword: IMPLEMENTS
rule 42 schema_keyword: INTERFACE
rule 43 schema_keyword: UNION
rule 44 schema_keyword: ENUM
rule 45 schema_keyword: INPUT
rule 46 name_without_on: IDENTIFIER
rule 47 name_without_on: FRAGMENT
rule 48 name_without_on: TRUE
rule 49 name_without_on: FALSE
rule 50 name_without_on: operation_type
rule 51 name_without_on: schema_keyword
rule 52 enum_name: IDENTIFIER
rule 53 enum_name: FRAGMENT
rule 54 enum_name: ON
rule 55 enum_name: operation_type
rule 56 enum_name: schema_keyword
rule 57 name_list: name
rule 58 name_list: name_list name
rule 59 enum_name_list: enum_name
rule 60 enum_name_list: enum_name_list enum_name
rule 61 arguments_opt: 
rule 62 arguments_opt: RPAREN LPAREN
rule 63 arguments_opt: RPAREN arguments_list LPAREN
rule 64 arguments_list: argument
rule 65 arguments_list: arguments_list argument
rule 66 argument: name COLON input_value
rule 67 input_value: FLOAT
rule 68 input_value: INT
rule 69 input_value: STRING
rule 70 input_value: TRUE
rule 71 input_value: FALSE
rule 72 input_value: variable
rule 73 input_value: list_value
rule 74 input_value: object_value
rule 75 input_value: enum_value
rule 76 variable: VAR_SIGN name
rule 77 list_value: RBRACKET LBRACKET
rule 78 list_value: RBRACKET list_value_list LBRACKET
rule 79 list_value_list: input_value
rule 80 list_value_list: list_value_list input_value
rule 81 object_value: RCURLY LCURLY
rule 82 object_value: RCURLY object_value_list LCURLY
rule 83 object_value_list: object_value_field
rule 84 object_value_list: object_value_list object_value_field
rule 85 object_value_field: name COLON input_value
rule 86 enum_value: enum_name directives_list_opt
rule 87 directives_list_opt: 
rule 88 directives_list_opt: directives_list
rule 89 directives_list: directive
rule 90 directives_list: directives_list directive
rule 91 directive: DIR_SIGN name arguments_opt
rule 92 fragment_spread: ELLIPSIS name_without_on directives_list_opt
rule 93 inline_fragment: ELLIPSIS ON name directives_list_opt selection_set
rule 94 inline_fragment: ELLIPSIS directives_list_opt selection_set
rule 95 fragment_definition: FRAGMENT fragment_name_opt ON name_without_on directives_list_opt selection_set
rule 96 fragment_name_opt: 
rule 97 fragment_name_opt: name_without_on
rule 98 type_system_definition: schema_definition
rule 99 type_system_definition: type_definition
rule 100 schema_definition: SCHEMA RCURLY operation_type_definition_list LCURLY
rule 101 operation_type_definition_list: operation_type_definition
rule 102 operation_type_definition_list: operation_type_definition_list operation_type_definition
rule 103 operation_type_definition: operation_type COLON name
rule 104 type_definition: scalar_type_definition
rule 105 type_definition: object_type_definition
rule 106 type_definition: interface_type_definition
rule 107 type_definition: union_type_definition
rule 108 type_definition: enum_type_definition
rule 109 type_definition: input_object_type_definition
rule 110 scalar_type_definition: SCALAR name directives_list_opt
rule 111 object_type_definition: TYPE name implements_opt directives_list_opt RCURLY field_definition_list LCURLY
rule 112 implements_opt: 
rule 113 implements_opt: IMPLEMENTS name_list
rule 114 input_value_definition: name COLON type default_value_opt directives_list_opt
rule 115 input_value_definition_list: input_value_definition
rule 116 input_value_definition_list: input_value_definition_list input_value_definition
rule 117 arguments_definitions_opt: 
rule 118 arguments_definitions_opt: RPAREN input_value_definition_list LPAREN
rule 119 field_definition: name arguments_definitions_opt COLON type directives_list_opt
rule 120 field_definition_list: field_definition
rule 121 field_definition_list: field_definition_list field_definition
rule 122 interface_type_definition: INTERFACE name directives_list_opt RCURLY field_definition_list LCURLY
rule 123 union_members: name
rule 124 union_members: union_members PIPE name
rule 125 union_type_definition: UNION name directives_list_opt EQUALS union_members
rule 126 enum_type_definition: ENUM name directives_list_opt RCURLY enum_name_list LCURLY
rule 127 input_object_type_definition: INPUT name directives_list_opt RCURLY input_value_definition_list LCURLY

------- Symbols -------

**Nonterminals, with rules where they appear

  $start (34)
    on right: 
    on left : 
  target (35)
    on right: 
    on left : 1
  document (36)
    on right: 1
    on left : 2
  definitions_list (37)
    on right: 2 4
    on left : 3 4
  definition (38)
    on right: 3 4
    on left : 5 6 7
  operation_definition (39)
    on right: 5
    on left : 8 9
  fragment_definition (40)
    on right: 6
    on left : 95
  type_system_definition (41)
    on right: 7
    on left : 98 99
  operation_type (42)
    on right: 8 50 55 103
    on left : 10 11 12
  operation_name_opt (43)
    on right: 8
    on left : 13 14
  variable_definitions_opt (44)
    on right: 8
    on left : 15 16
  directives_list_opt (45)
    on right: 8 34 35 86 92 93 94 95 110 111 114 119 122 125 126 127
    on left : 87 88
  selection_set (46)
    on right: 8 9 28 93 94 95
    on left : 25 26
  name (47)
    on right: 14 19 20 34 35 57 58 66 76 85 91 93 103 110 111 114 119 122 123 124 125 126 127
    on left : 36 37
  variable_definitions_list (48)
    on right: 16 18
    on left : 17 18
  variable_definition (49)
    on right: 17 18
    on left : 19
  type (50)
    on right: 19 21 22 114 119
    on left : 20 21 22
  default_value_opt (51)
    on right: 19 114
    on left : 23 24
  input_value (52)
    on right: 24 66 79 80 85
    on left : 67 68 69 70 71 72 73 74 75
  selection_list (53)
    on right: 26 30
    on left : 29 30
  selection_set_opt (54)
    on right: 34 35
    on left : 27 28
  selection (55)
    on right: 29 30
    on left : 31 32 33
  field (56)
    on right: 31
    on left : 34 35
  fragment_spread (57)
    on right: 32
    on left : 92
  inline_fragment (58)
    on right: 33
    on left : 93 94
  arguments_opt (59)
    on right: 34 35 91
    on left : 61 62 63
  name_without_on (60)
    on right: 36 92 95 97
    on left : 46 47 48 49 50 51
  schema_keyword (61)
    on right: 51 56
    on left : 38 39 40 41 42 43 44 45
  enum_name (62)
    on right: 59 60 86
    on left : 52 53 54 55 56
  name_list (63)
    on right: 58 113
    on left : 57 58
  enum_name_list (64)
    on right: 60 126
    on left : 59 60
  arguments_list (65)
    on right: 63 65
    on left : 64 65
  argument (66)
    on right: 64 65
    on left : 66
  variable (67)
    on right: 72
    on left : 76
  list_value (68)
    on right: 73
    on left : 77 78
  object_value (69)
    on right: 74
    on left : 81 82
  enum_value (70)
    on right: 75
    on left : 86
  list_value_list (71)
    on right: 78 80
    on left : 79 80
  object_value_list (72)
    on right: 82 84
    on left : 83 84
  object_value_field (73)
    on right: 83 84
    on left : 85
  directives_list (74)
    on right: 88 90
    on left : 89 90
  directive (75)
    on right: 89 90
    on left : 91
  fragment_name_opt (76)
    on right: 95
    on left : 96 97
  schema_definition (77)
    on right: 98
    on left : 100
  type_definition (78)
    on right: 99
    on left : 104 105 106 107 108 109
  operation_type_definition_list (79)
    on right: 100 102
    on left : 101 102
  operation_type_definition (80)
    on right: 101 102
    on left : 103
  scalar_type_definition (81)
    on right: 104
    on left : 110
  object_type_definition (82)
    on right: 105
    on left : 111
  interface_type_definition (83)
    on right: 106
    on left : 122
  union_type_definition (84)
    on right: 107
    on left : 125
  enum_type_definition (85)
    on right: 108
    on left : 126
  input_object_type_definition (86)
    on right: 109
    on left : 127
  implements_opt (87)
    on right: 111
    on left : 112 113
  field_definition_list (88)
    on right: 111 121 122
    on left : 120 121
  input_value_definition (89)
    on right: 115 116
    on left : 114
  input_value_definition_list (90)
    on right: 116 118 127
    on left : 115 116
  arguments_definitions_opt (91)
    on right: 119
    on left : 117 118
  field_definition (92)
    on right: 120 121
    on left : 119
  union_members (93)
    on right: 124 125
    on left : 123 124

**Terminals, with rules where they appear

  $end (0) 
  error (1) 
  QUERY (2) 10
  MUTATION (3) 11
  SUBSCRIPTION (4) 12
  RPAREN (5) 16 62 63 118
  LPAREN (6) 16 62 63 118
  VAR_SIGN (7) 19 76
  COLON (8) 19 35 66 85 103 114 119
  BANG (9) 21
  RBRACKET (10) 22 77 78
  LBRACKET (11) 22 77 78
  EQUALS (12) 24 125
  RCURLY (13) 25 26 81 82 100 111 122 126 127
  LCURLY (14) 25 26 81 82 100 111 122 126 127
  ON (15) 37 54 93 95
  SCHEMA (16) 38 100
  SCALAR (17) 39 110
  TYPE (18) 40 111
  IMPLEMENTS (19) 41 113
  INTERFACE (20) 42 122
  UNION (21) 43 125
  ENUM (22) 44 126
  INPUT (23) 45 127
  IDENTIFIER (24) 46 52
  FRAGMENT (25) 47 53 95
  TRUE (26) 48 70
  FALSE (27) 49 71
  FLOAT (28) 67
  INT (29) 68
  STRING (30) 69
  DIR_SIGN (31) 91
  ELLIPSIS (32) 92 93 94
  PIPE (33) 124

--------- State ---------

state 0


  QUERY         shift, and go to state 10
  MUTATION      shift, and go to state 11
  SUBSCRIPTION  shift, and go to state 12
  RCURLY        shift, and go to state 13
  SCHEMA        shift, and go to state 17
  SCALAR        shift, and go to state 24
  TYPE          shift, and go to state 25
  INTERFACE     shift, and go to state 26
  UNION         shift, and go to state 27
  ENUM          shift, and go to state 28
  INPUT         shift, and go to state 29
  FRAGMENT      shift, and go to state 14

  target        go to state 1
  document      go to state 2
  definitions_list  go to state 3
  definition    go to state 4
  operation_definition  go to state 5
  fragment_definition  go to state 6
  type_system_definition  go to state 7
  operation_type  go to state 8
  selection_set  go to state 9
  schema_definition  go to state 15
  type_definition  go to state 16
  scalar_type_definition  go to state 18
  object_type_definition  go to state 19
  interface_type_definition  go to state 20
  union_type_definition  go to state 21
  enum_type_definition  go to state 22
  input_object_type_definition  go to state 23

state 1


  $end          shift, and go to state 30


state 2

   1) target : document _

  $default      reduce using rule 1 (target)


state 3

   2) document : definitions_list _
   4) definitions_list : definitions_list _ definition

  QUERY         shift, and go to state 10
  MUTATION      shift, and go to state 11
  SUBSCRIPTION  shift, and go to state 12
  RCURLY        shift, and go to state 13
  SCHEMA        shift, and go to state 17
  SCALAR        shift, and go to state 24
  TYPE          shift, and go to state 25
  INTERFACE     shift, and go to state 26
  UNION         shift, and go to state 27
  ENUM          shift, and go to state 28
  INPUT         shift, and go to state 29
  FRAGMENT      shift, and go to state 14
  $default      reduce using rule 2 (document)

  definition    go to state 31
  operation_definition  go to state 5
  fragment_definition  go to state 6
  type_system_definition  go to state 7
  operation_type  go to state 8
  selection_set  go to state 9
  schema_definition  go to state 15
  type_definition  go to state 16
  scalar_type_definition  go to state 18
  object_type_definition  go to state 19
  interface_type_definition  go to state 20
  union_type_definition  go to state 21
  enum_type_definition  go to state 22
  input_object_type_definition  go to state 23

state 4

   3) definitions_list : definition _

  $default      reduce using rule 3 (definitions_list)


state 5

   5) definition : operation_definition _

  $default      reduce using rule 5 (definition)


state 6

   6) definition : fragment_definition _

  $default      reduce using rule 6 (definition)


state 7

   7) definition : type_system_definition _

  $default      reduce using rule 7 (definition)


state 8

   8) operation_definition : operation_type _ operation_name_opt variable_definitions_opt directives_list_opt selection_set

  QUERY         shift, and go to state 10
  MUTATION      shift, and go to state 11
  SUBSCRIPTION  shift, and go to state 12
  ON            shift, and go to state 35
  SCHEMA        shift, and go to state 36
  SCALAR        shift, and go to state 37
  TYPE          shift, and go to state 38
  IMPLEMENTS    shift, and go to state 39
  INTERFACE     shift, and go to state 40
  UNION         shift, and go to state 41
  ENUM          shift, and go to state 42
  INPUT         shift, and go to state 43
  IDENTIFIER    shift, and go to state 44
  FRAGMENT      shift, and go to state 45
  TRUE          shift, and go to state 46
  FALSE         shift, and go to state 47
  $default      reduce using rule 13 (operation_name_opt)

  operation_name_opt  go to state 32
  name          go to state 33
  name_without_on  go to state 34
  operation_type  go to state 48
  schema_keyword  go to state 49

state 9

   9) operation_definition : selection_set _

  $default      reduce using rule 9 (operation_definition)


state 10

  10) operation_type : QUERY _

  $default      reduce using rule 10 (operation_type)


state 11

  11) operation_type : MUTATION _

  $default      reduce using rule 11 (operation_type)


state 12

  12) operation_type : SUBSCRIPTION _

  $default      reduce using rule 12 (operation_type)


state 13

  25) selection_set : RCURLY _ LCURLY
  26) selection_set : RCURLY _ selection_list LCURLY

  QUERY         shift, and go to state 10
  MUTATION      shift, and go to state 11
  SUBSCRIPTION  shift, and go to state 12
  LCURLY        shift, and go to state 50
  ON            shift, and go to state 35
  SCHEMA        shift, and go to state 36
  SCALAR        shift, and go to state 37
  TYPE          shift, and go to state 38
  IMPLEMENTS    shift, and go to state 39
  INTERFACE     shift, and go to state 40
  UNION         shift, and go to state 41
  ENUM          shift, and go to state 42
  INPUT         shift, and go to state 43
  IDENTIFIER    shift, and go to state 44
  FRAGMENT      shift, and go to state 45
  TRUE          shift, and go to state 46
  FALSE         shift, and go to state 47
  ELLIPSIS      shift, and go to state 57

  selection_list  go to state 51
  selection     go to state 52
  field         go to state 53
  fragment_spread  go to state 54
  inline_fragment  go to state 55
  name          go to state 56
  name_without_on  go to state 34
  operation_type  go to state 48
  schema_keyword  go to state 49

state 14

  95) fragment_definition : FRAGMENT _ fragment_name_opt ON name_without_on directives_list_opt selection_set

  QUERY         shift, and go to state 10
  MUTATION      shift, and go to state 11
  SUBSCRIPTION  shift, and go to state 12
  SCHEMA        shift, and go to state 36
  SCALAR        shift, and go to state 37
  TYPE          shift, and go to state 38
  IMPLEMENTS    shift, and go to state 39
  INTERFACE     shift, and go to state 40
  UNION         shift, and go to state 41
  ENUM          shift, and go to state 42
  INPUT         shift, and go to state 43
  IDENTIFIER    shift, and go to state 44
  FRAGMENT      shift, and go to state 45
  TRUE          shift, and go to state 46
  FALSE         shift, and go to state 47
  $default      reduce using rule 96 (fragment_name_opt)

  operation_type  go to state 48
  schema_keyword  go to state 49
  fragment_name_opt  go to state 58
  name_without_on  go to state 59

state 15

  98) type_system_definition : schema_definition _

  $default      reduce using rule 98 (type_system_definition)


state 16

  99) type_system_definition : type_definition _

  $default      reduce using rule 99 (type_system_definition)


state 17

 100) schema_definition : SCHEMA _ RCURLY operation_type_definition_list LCURLY

  RCURLY        shift, and go to state 60


state 18

 104) type_definition : scalar_type_definition _

  $default      reduce using rule 104 (type_definition)


state 19

 105) type_definition : object_type_definition _

  $default      reduce using rule 105 (type_definition)


state 20

 106) type_definition : interface_type_definition _

  $default      reduce using rule 106 (type_definition)


state 21

 107) type_definition : union_type_definition _

  $default      reduce using rule 107 (type_definition)


state 22

 108) type_definition : enum_type_definition _

  $default      reduce using rule 108 (type_definition)


state 23

 109) type_definition : input_object_type_definition _

  $default      reduce using rule 109 (type_definition)


state 24

 110) scalar_type_definition : SCALAR _ name directives_list_opt

  QUERY         shift, and go to state 10
  MUTATION      shift, and go to state 11
  SUBSCRIPTION  shift, and go to state 12
  ON            shift, and go to state 35
  SCHEMA        shift, and go to state 36
  SCALAR        shift, and go to state 37
  TYPE          shift, and go to state 38
  IMPLEMENTS    shift, and go to state 39
  INTERFACE     shift, and go to state 40
  UNION         shift, and go to state 41
  ENUM          shift, and go to state 42
  INPUT         shift, and go to state 43
  IDENTIFIER    shift, and go to state 44
  FRAGMENT      shift, and go to state 45
  TRUE          shift, and go to state 46
  FALSE         shift, and go to state 47

  name_without_on  go to state 34
  operation_type  go to state 48
  schema_keyword  go to state 49
  name          go to state 61

state 25

 111) object_type_definition : TYPE _ name implements_opt directives_list_opt RCURLY field_definition_list LCURLY

  QUERY         shift, and go to state 10
  MUTATION      shift, and go to state 11
  SUBSCRIPTION  shift, and go to state 12
  ON            shift, and go to state 35
  SCHEMA        shift, and go to state 36
  SCALAR        shift, and go to state 37
  TYPE          shift, and go to state 38
  IMPLEMENTS    shift, and go to state 39
  INTERFACE     shift, and go to state 40
  UNION         shift, and go to state 41
  ENUM          shift, and go to state 42
  INPUT         shift, and go to state 43
  IDENTIFIER    shift, and go to state 44
  FRAGMENT      shift, and go to state 45
  TRUE          shift, and go to state 46
  FALSE         shift, and go to state 47

  name_without_on  go to state 34
  operation_type  go to state 48
  schema_keyword  go to state 49
  name          go to state 62

state 26

 122) interface_type_definition : INTERFACE _ name directives_list_opt RCURLY field_definition_list LCURLY

  QUERY         shift, and go to state 10
  MUTATION      shift, and go to state 11
  SUBSCRIPTION  shift, and go to state 12
  ON            shift, and go to state 35
  SCHEMA        shift, and go to state 36
  SCALAR        shift, and go to state 37
  TYPE          shift, and go to state 38
  IMPLEMENTS    shift, and go to state 39
  INTERFACE     shift, and go to state 40
  UNION         shift, and go to state 41
  ENUM          shift, and go to state 42
  INPUT         shift, and go to state 43
  IDENTIFIER    shift, and go to state 44
  FRAGMENT      shift, and go to state 45
  TRUE          shift, and go to state 46
  FALSE         shift, and go to state 47

  name_without_on  go to state 34
  operation_type  go to state 48
  schema_keyword  go to state 49
  name          go to state 63

state 27

 125) union_type_definition : UNION _ name directives_list_opt EQUALS union_members

  QUERY         shift, and go to state 10
  MUTATION      shift, and go to state 11
  SUBSCRIPTION  shift, and go to state 12
  ON            shift, and go to state 35
  SCHEMA        shift, and go to state 36
  SCALAR        shift, and go to state 37
  TYPE          shift, and go to state 38
  IMPLEMENTS    shift, and go to state 39
  INTERFACE     shift, and go to state 40
  UNION         shift, and go to state 41
  ENUM          shift, and go to state 42
  INPUT         shift, and go to state 43
  IDENTIFIER    shift, and go to state 44
  FRAGMENT      shift, and go to state 45
  TRUE          shift, and go to state 46
  FALSE         shift, and go to state 47

  name_without_on  go to state 34
  operation_type  go to state 48
  schema_keyword  go to state 49
  name          go to state 64

state 28

 126) enum_type_definition : ENUM _ name directives_list_opt RCURLY enum_name_list LCURLY

  QUERY         shift, and go to state 10
  MUTATION      shift, and go to state 11
  SUBSCRIPTION  shift, and go to state 12
  ON            shift, and go to state 35
  SCHEMA        shift, and go to state 36
  SCALAR        shift, and go to state 37
  TYPE          shift, and go to state 38
  IMPLEMENTS    shift, and go to state 39
  INTERFACE     shift, and go to state 40
  UNION         shift, and go to state 41
  ENUM          shift, and go to state 42
  INPUT         shift, and go to state 43
  IDENTIFIER    shift, and go to state 44
  FRAGMENT      shift, and go to state 45
  TRUE          shift, and go to state 46
  FALSE         shift, and go to state 47

  name_without_on  go to state 34
  operation_type  go to state 48
  schema_keyword  go to state 49
  name          go to state 65

state 29

 127) input_object_type_definition : INPUT _ name directives_list_opt RCURLY input_value_definition_list LCURLY

  QUERY         shift, and go to state 10
  MUTATION      shift, and go to state 11
  SUBSCRIPTION  shift, and go to state 12
  ON            shift, and go to state 35
  SCHEMA        shift, and go to state 36
  SCALAR        shift, and go to state 37
  TYPE          shift, and go to state 38
  IMPLEMENTS    shift, and go to state 39
  INTERFACE     shift, and go to state 40
  UNION         shift, and go to state 41
  ENUM          shift, and go to state 42
  INPUT         shift, and go to state 43
  IDENTIFIER    shift, and go to state 44
  FRAGMENT      shift, and go to state 45
  TRUE          shift, and go to state 46
  FALSE         shift, and go to state 47

  name_without_on  go to state 34
  operation_type  go to state 48
  schema_keyword  go to state 49
  name          go to state 66

state 30


  $end          shift, and go to state 67


state 31

   4) definitions_list : definitions_list definition _

  $default      reduce using rule 4 (definitions_list)


state 32

   8) operation_definition : operation_type operation_name_opt _ variable_definitions_opt directives_list_opt selection_set

  RPAREN        shift, and go to state 69
  $default      reduce using rule 15 (variable_definitions_opt)

  variable_definitions_opt  go to state 68

state 33

  14) operation_name_opt : name _

  $default      reduce using rule 14 (operation_name_opt)


state 34

  36) name : name_without_on _

  $default      reduce using rule 36 (name)


state 35

  37) name : ON _

  $default      reduce using rule 37 (name)


state 36

  38) schema_keyword : SCHEMA _

  $default      reduce using rule 38 (schema_keyword)


state 37

  39) schema_keyword : SCALAR _

  $default      reduce using rule 39 (schema_keyword)


state 38

  40) schema_keyword : TYPE _

  $default      reduce using rule 40 (schema_keyword)


state 39

  41) schema_keyword : IMPLEMENTS _

  $default      reduce using rule 41 (schema_keyword)


state 40

  42) schema_keyword : INTERFACE _

  $default      reduce using rule 42 (schema_keyword)


state 41

  43) schema_keyword : UNION _

  $default      reduce using rule 43 (schema_keyword)


state 42

  44) schema_keyword : ENUM _

  $default      reduce using rule 44 (schema_keyword)


state 43

  45) schema_keyword : INPUT _

  $default      reduce using rule 45 (schema_keyword)


state 44

  46) name_without_on : IDENTIFIER _

  $default      reduce using rule 46 (name_without_on)


state 45

  47) name_without_on : FRAGMENT _

  $default      reduce using rule 47 (name_without_on)


state 46

  48) name_without_on : TRUE _

  $default      reduce using rule 48 (name_without_on)


state 47

  49) name_without_on : FALSE _

  $default      reduce using rule 49 (name_without_on)


state 48

  50) name_without_on : operation_type _

  $default      reduce using rule 50 (name_without_on)


state 49

  51) name_without_on : schema_keyword _

  $default      reduce using rule 51 (name_without_on)


state 50

  25) selection_set : RCURLY LCURLY _

  $default      reduce using rule 25 (selection_set)


state 51

  26) selection_set : RCURLY selection_list _ LCURLY
  30) selection_list : selection_list _ selection

  QUERY         shift, and go to state 10
  MUTATION      shift, and go to state 11
  SUBSCRIPTION  shift, and go to state 12
  LCURLY        shift, and go to state 70
  ON            shift, and go to state 35
  SCHEMA        shift, and go to state 36
  SCALAR        shift, and go to state 37
  TYPE          shift, and go to state 38
  IMPLEMENTS    shift, and go to state 39
  INTERFACE     shift, and go to state 40
  UNION         shift, and go to state 41
  ENUM          shift, and go to state 42
  INPUT         shift, and go to state 43
  IDENTIFIER    shift, and go to state 44
  FRAGMENT      shift, and go to state 45
  TRUE          shift, and go to state 46
  FALSE         shift, and go to state 47
  ELLIPSIS      shift, and go to state 57

  selection     go to state 71
  field         go to state 53
  fragment_spread  go to state 54
  inline_fragment  go to state 55
  name          go to state 56
  name_without_on  go to state 34
  operation_type  go to state 48
  schema_keyword  go to state 49

state 52

  29) selection_list : selection _

  $default      reduce using rule 29 (selection_list)


state 53

  31) selection : field _

  $default      reduce using rule 31 (selection)


state 54

  32) selection : fragment_spread _

  $default      reduce using rule 32 (selection)


state 55

  33) selection : inline_fragment _

  $default      reduce using rule 33 (selection)


state 56

  34) field : name _ arguments_opt directives_list_opt selection_set_opt
  35) field : name _ COLON name arguments_opt directives_list_opt selection_set_opt

  RPAREN        shift, and go to state 74
  COLON         shift, and go to state 73
  $default      reduce using rule 61 (arguments_opt)

  arguments_opt  go to state 72

state 57

  92) fragment_spread : ELLIPSIS _ name_without_on directives_list_opt
  93) inline_fragment : ELLIPSIS _ ON name directives_list_opt selection_set
  94) inline_fragment : ELLIPSIS _ directives_list_opt selection_set

  QUERY         shift, and go to state 10
  MUTATION      shift, and go to state 11
  SUBSCRIPTION  shift, and go to state 12
  ON            shift, and go to state 79
  SCHEMA        shift, and go to state 36
  SCALAR        shift, and go to state 37
  TYPE          shift, and go to state 38
  IMPLEMENTS    shift, and go to state 39
  INTERFACE     shift, and go to state 40
  UNION         shift, and go to state 41
  ENUM          shift, and go to state 42
  INPUT         shift, and go to state 43
  IDENTIFIER    shift, and go to state 44
  FRAGMENT      shift, and go to state 45
  TRUE          shift, and go to state 46
  FALSE         shift, and go to state 47
  DIR_SIGN      shift, and go to state 77
  $default      reduce using rule 87 (directives_list_opt)

  operation_type  go to state 48
  schema_keyword  go to state 49
  directives_list  go to state 75
  directive     go to state 76
  name_without_on  go to state 78
  directives_list_opt  go to state 80

state 58

  95) fragment_definition : FRAGMENT fragment_name_opt _ ON name_without_on directives_list_opt selection_set

  ON            shift, and go to state 81


state 59

  97) fragment_name_opt : name_without_on _

  $default      reduce using rule 97 (fragment_name_opt)


state 60

 100) schema_definition : SCHEMA RCURLY _ operation_type_definition_list LCURLY

  QUERY         shift, and go to state 10
  MUTATION      shift, and go to state 11
  SUBSCRIPTION  shift, and go to state 12

  operation_type_definition_list  go to state 82
  operation_type_definition  go to state 83
  operation_type  go to state 84

state 61

 110) scalar_type_definition : SCALAR name _ directives_list_opt

  DIR_SIGN      shift, and go to state 77
  $default      reduce using rule 87 (directives_list_opt)

  directives_list  go to state 75
  directive     go to state 76
  directives_list_opt  go to state 85

state 62

 111) object_type_definition : TYPE name _ implements_opt directives_list_opt RCURLY field_definition_list LCURLY

  IMPLEMENTS    shift, and go to state 87
  $default      reduce using rule 112 (implements_opt)

  implements_opt  go to state 86

state 63

 122) interface_type_definition : INTERFACE name _ directives_list_opt RCURLY field_definition_list LCURLY

  DIR_SIGN      shift, and go to state 77
  $default      reduce using rule 87 (directives_list_opt)

  directives_list  go to state 75
  directive     go to state 76
  directives_list_opt  go to state 88

state 64

 125) union_type_definition : UNION name _ directives_list_opt EQUALS union_members

  DIR_SIGN      shift, and go to state 77
  $default      reduce using rule 87 (directives_list_opt)

  directives_list  go to state 75
  directive     go to state 76
  directives_list_opt  go to state 89

state 65

 126) enum_type_definition : ENUM name _ directives_list_opt RCURLY enum_name_list LCURLY

  DIR_SIGN      shift, and go to state 77
  $default      reduce using rule 87 (directives_list_opt)

  directives_list  go to state 75
  directive     go to state 76
  directives_list_opt  go to state 90

state 66

 127) input_object_type_definition : INPUT name _ directives_list_opt RCURLY input_value_definition_list LCURLY

  DIR_SIGN      shift, and go to state 77
  $default      reduce using rule 87 (directives_list_opt)

  directives_list  go to state 75
  directive     go to state 76
  directives_list_opt  go to state 91

state 67


  $default      accept


state 68

   8) operation_definition : operation_type operation_name_opt variable_definitions_opt _ directives_list_opt selection_set

  DIR_SIGN      shift, and go to state 77
  $default      reduce using rule 87 (directives_list_opt)

  directives_list_opt  go to state 92
  directives_list  go to state 75
  directive     go to state 76

state 69

  16) variable_definitions_opt : RPAREN _ variable_definitions_list LPAREN

  VAR_SIGN      shift, and go to state 95

  variable_definitions_list  go to state 93
  variable_definition  go to state 94

state 70

  26) selection_set : RCURLY selection_list LCURLY _

  $default      reduce using rule 26 (selection_set)


state 71

  30) selection_list : selection_list selection _

  $default      reduce using rule 30 (selection_list)


state 72

  34) field : name arguments_opt _ directives_list_opt selection_set_opt

  DIR_SIGN      shift, and go to state 77
  $default      reduce using rule 87 (directives_list_opt)

  directives_list_opt  go to state 96
  directives_list  go to state 75
  directive     go to state 76

state 73

  35) field : name COLON _ name arguments_opt directives_list_opt selection_set_opt

  QUERY         shift, and go to state 10
  MUTATION      shift, and go to state 11
  SUBSCRIPTION  shift, and go to state 12
  ON            shift, and go to state 35
  SCHEMA        shift, and go to state 36
  SCALAR        shift, and go to state 37
  TYPE          shift, and go to state 38
  IMPLEMENTS    shift, and go to state 39
  INTERFACE     shift, and go to state 40
  UNION         shift, and go to state 41
  ENUM          shift, and go to state 42
  INPUT         shift, and go to state 43
  IDENTIFIER    shift, and go to state 44
  FRAGMENT      shift, and go to state 45
  TRUE          shift, and go to state 46
  FALSE         shift, and go to state 47

  name          go to state 97
  name_without_on  go to state 34
  operation_type  go to state 48
  schema_keyword  go to state 49

state 74

  62) arguments_opt : RPAREN _ LPAREN
  63) arguments_opt : RPAREN _ arguments_list LPAREN

  QUERY         shift, and go to state 10
  MUTATION      shift, and go to state 11
  SUBSCRIPTION  shift, and go to state 12
  LPAREN        shift, and go to state 98
  ON            shift, and go to state 35
  SCHEMA        shift, and go to state 36
  SCALAR        shift, and go to state 37
  TYPE          shift, and go to state 38
  IMPLEMENTS    shift, and go to state 39
  INTERFACE     shift, and go to state 40
  UNION         shift, and go to state 41
  ENUM          shift, and go to state 42
  INPUT         shift, and go to state 43
  IDENTIFIER    shift, and go to state 44
  FRAGMENT      shift, and go to state 45
  TRUE          shift, and go to state 46
  FALSE         shift, and go to state 47

  name_without_on  go to state 34
  operation_type  go to state 48
  schema_keyword  go to state 49
  arguments_list  go to state 99
  argument      go to state 100
  name          go to state 101

state 75

  88) directives_list_opt : directives_list _
  90) directives_list : directives_list _ directive

  DIR_SIGN      shift, and go to state 77
  DIR_SIGN      [reduce using rule 88 (directives_list_opt)]
  $default      reduce using rule 88 (directives_list_opt)

  directive     go to state 102

state 76

  89) directives_list : directive _

  $default      reduce using rule 89 (directives_list)


state 77

  91) directive : DIR_SIGN _ name arguments_opt

  QUERY         shift, and go to state 10
  MUTATION      shift, and go to state 11
  SUBSCRIPTION  shift, and go to state 12
  ON            shift, and go to state 35
  SCHEMA        shift, and go to state 36
  SCALAR        shift, and go to state 37
  TYPE          shift, and go to state 38
  IMPLEMENTS    shift, and go to state 39
  INTERFACE     shift, and go to state 40
  UNION         shift, and go to state 41
  ENUM          shift, and go to state 42
  INPUT         shift, and go to state 43
  IDENTIFIER    shift, and go to state 44
  FRAGMENT      shift, and go to state 45
  TRUE          shift, and go to state 46
  FALSE         shift, and go to state 47

  name_without_on  go to state 34
  operation_type  go to state 48
  schema_keyword  go to state 49
  name          go to state 103

state 78

  92) fragment_spread : ELLIPSIS name_without_on _ directives_list_opt

  DIR_SIGN      shift, and go to state 77
  $default      reduce using rule 87 (directives_list_opt)

  directives_list  go to state 75
  directive     go to state 76
  directives_list_opt  go to state 104

state 79

  93) inline_fragment : ELLIPSIS ON _ name directives_list_opt selection_set

  QUERY         shift, and go to state 10
  MUTATION      shift, and go to state 11
  SUBSCRIPTION  shift, and go to state 12
  ON            shift, and go to state 35
  SCHEMA        shift, and go to state 36
  SCALAR        shift, and go to state 37
  TYPE          shift, and go to state 38
  IMPLEMENTS    shift, and go to state 39
  INTERFACE     shift, and go to state 40
  UNION         shift, and go to state 41
  ENUM          shift, and go to state 42
  INPUT         shift, and go to state 43
  IDENTIFIER    shift, and go to state 44
  FRAGMENT      shift, and go to state 45
  TRUE          shift, and go to state 46
  FALSE         shift, and go to state 47

  name_without_on  go to state 34
  operation_type  go to state 48
  schema_keyword  go to state 49
  name          go to state 105

state 80

  94) inline_fragment : ELLIPSIS directives_list_opt _ selection_set

  RCURLY        shift, and go to state 13

  selection_set  go to state 106

state 81

  95) fragment_definition : FRAGMENT fragment_name_opt ON _ name_without_on directives_list_opt selection_set

  QUERY         shift, and go to state 10
  MUTATION      shift, and go to state 11
  SUBSCRIPTION  shift, and go to state 12
  SCHEMA        shift, and go to state 36
  SCALAR        shift, and go to state 37
  TYPE          shift, and go to state 38
  IMPLEMENTS    shift, and go to state 39
  INTERFACE     shift, and go to state 40
  UNION         shift, and go to state 41
  ENUM          shift, and go to state 42
  INPUT         shift, and go to state 43
  IDENTIFIER    shift, and go to state 44
  FRAGMENT      shift, and go to state 45
  TRUE          shift, and go to state 46
  FALSE         shift, and go to state 47

  operation_type  go to state 48
  schema_keyword  go to state 49
  name_without_on  go to state 107

state 82

 100) schema_definition : SCHEMA RCURLY operation_type_definition_list _ LCURLY
 102) operation_type_definition_list : operation_type_definition_list _ operation_type_definition

  QUERY         shift, and go to state 10
  MUTATION      shift, and go to state 11
  SUBSCRIPTION  shift, and go to state 12
  LCURLY        shift, and go to state 108

  operation_type_definition  go to state 109
  operation_type  go to state 84

state 83

 101) operation_type_definition_list : operation_type_definition _

  $default      reduce using rule 101 (operation_type_definition_list)


state 84

 103) operation_type_definition : operation_type _ COLON name

  COLON         shift, and go to state 110


state 85

 110) scalar_type_definition : SCALAR name directives_list_opt _

  $default      reduce using rule 110 (scalar_type_definition)


state 86

 111) object_type_definition : TYPE name implements_opt _ directives_list_opt RCURLY field_definition_list LCURLY

  DIR_SIGN      shift, and go to state 77
  $default      reduce using rule 87 (directives_list_opt)

  directives_list  go to state 75
  directive     go to state 76
  directives_list_opt  go to state 111

state 87

 113) implements_opt : IMPLEMENTS _ name_list

  QUERY         shift, and go to state 10
  MUTATION      shift, and go to state 11
  SUBSCRIPTION  shift, and go to state 12
  ON            shift, and go to state 35
  SCHEMA        shift, and go to state 36
  SCALAR        shift, and go to state 37
  TYPE          shift, and go to state 38
  IMPLEMENTS    shift, and go to state 39
  INTERFACE     shift, and go to state 40
  UNION         shift, and go to state 41
  ENUM          shift, and go to state 42
  INPUT         shift, and go to state 43
  IDENTIFIER    shift, and go to state 44
  FRAGMENT      shift, and go to state 45
  TRUE          shift, and go to state 46
  FALSE         shift, and go to state 47

  name_without_on  go to state 34
  operation_type  go to state 48
  schema_keyword  go to state 49
  name          go to state 112
  name_list     go to state 113

state 88

 122) interface_type_definition : INTERFACE name directives_list_opt _ RCURLY field_definition_list LCURLY

  RCURLY        shift, and go to state 114


state 89

 125) union_type_definition : UNION name directives_list_opt _ EQUALS union_members

  EQUALS        shift, and go to state 115


state 90

 126) enum_type_definition : ENUM name directives_list_opt _ RCURLY enum_name_list LCURLY

  RCURLY        shift, and go to state 116


state 91

 127) input_object_type_definition : INPUT name directives_list_opt _ RCURLY input_value_definition_list LCURLY

  RCURLY        shift, and go to state 117


state 92

   8) operation_definition : operation_type operation_name_opt variable_definitions_opt directives_list_opt _ selection_set

  RCURLY        shift, and go to state 13

  selection_set  go to state 118

state 93

  16) variable_definitions_opt : RPAREN variable_definitions_list _ LPAREN
  18) variable_definitions_list : variable_definitions_list _ variable_definition

  LPAREN        shift, and go to state 119
  VAR_SIGN      shift, and go to state 95

  variable_definition  go to state 120

state 94

  17) variable_definitions_list : variable_definition _

  $default      reduce using rule 17 (variable_definitions_list)


state 95

  19) variable_definition : VAR_SIGN _ name COLON type default_value_opt

  QUERY         shift, and go to state 10
  MUTATION      shift, and go to state 11
  SUBSCRIPTION  shift, and go to state 12
  ON            shift, and go to state 35
  SCHEMA        shift, and go to state 36
  SCALAR        shift, and go to state 37
  TYPE          shift, and go to state 38
  IMPLEMENTS    shift, and go to state 39
  INTERFACE     shift, and go to state 40
  UNION         shift, and go to state 41
  ENUM          shift, and go to state 42
  INPUT         shift, and go to state 43
  IDENTIFIER    shift, and go to state 44
  FRAGMENT      shift, and go to state 45
  TRUE          shift, and go to state 46
  FALSE         shift, and go to state 47

  name          go to state 121
  name_without_on  go to state 34
  operation_type  go to state 48
  schema_keyword  go to state 49

state 96

  34) field : name arguments_opt directives_list_opt _ selection_set_opt

  RCURLY        shift, and go to state 13
  $default      reduce using rule 27 (selection_set_opt)

  selection_set  go to state 122
  selection_set_opt  go to state 123

state 97

  35) field : name COLON name _ arguments_opt directives_list_opt selection_set_opt

  RPAREN        shift, and go to state 74
  $default      reduce using rule 61 (arguments_opt)

  arguments_opt  go to state 124

state 98

  62) arguments_opt : RPAREN LPAREN _

  $default      reduce using rule 62 (arguments_opt)


state 99

  63) arguments_opt : RPAREN arguments_list _ LPAREN
  65) arguments_list : arguments_list _ argument

  QUERY         shift, and go to state 10
  MUTATION      shift, and go to state 11
  SUBSCRIPTION  shift, and go to state 12
  LPAREN        shift, and go to state 125
  ON            shift, and go to state 35
  SCHEMA        shift, and go to state 36
  SCALAR        shift, and go to state 37
  TYPE          shift, and go to state 38
  IMPLEMENTS    shift, and go to state 39
  INTERFACE     shift, and go to state 40
  UNION         shift, and go to state 41
  ENUM          shift, and go to state 42
  INPUT         shift, and go to state 43
  IDENTIFIER    shift, and go to state 44
  FRAGMENT      shift, and go to state 45
  TRUE          shift, and go to state 46
  FALSE         shift, and go to state 47

  name_without_on  go to state 34
  operation_type  go to state 48
  schema_keyword  go to state 49
  argument      go to state 126
  name          go to state 101

state 100

  64) arguments_list : argument _

  $default      reduce using rule 64 (arguments_list)


state 101

  66) argument : name _ COLON input_value

  COLON         shift, and go to state 127


state 102

  90) directives_list : directives_list directive _

  $default      reduce using rule 90 (directives_list)


state 103

  91) directive : DIR_SIGN name _ arguments_opt

  RPAREN        shift, and go to state 74
  $default      reduce using rule 61 (arguments_opt)

  arguments_opt  go to state 128

state 104

  92) fragment_spread : ELLIPSIS name_without_on directives_list_opt _

  $default      reduce using rule 92 (fragment_spread)


state 105

  93) inline_fragment : ELLIPSIS ON name _ directives_list_opt selection_set

  DIR_SIGN      shift, and go to state 77
  $default      reduce using rule 87 (directives_list_opt)

  directives_list  go to state 75
  directive     go to state 76
  directives_list_opt  go to state 129

state 106

  94) inline_fragment : ELLIPSIS directives_list_opt selection_set _

  $default      reduce using rule 94 (inline_fragment)


state 107

  95) fragment_definition : FRAGMENT fragment_name_opt ON name_without_on _ directives_list_opt selection_set

  DIR_SIGN      shift, and go to state 77
  $default      reduce using rule 87 (directives_list_opt)

  directives_list  go to state 75
  directive     go to state 76
  directives_list_opt  go to state 130

state 108

 100) schema_definition : SCHEMA RCURLY operation_type_definition_list LCURLY _

  $default      reduce using rule 100 (schema_definition)


state 109

 102) operation_type_definition_list : operation_type_definition_list operation_type_definition _

  $default      reduce using rule 102 (operation_type_definition_list)


state 110

 103) operation_type_definition : operation_type COLON _ name

  QUERY         shift, and go to state 10
  MUTATION      shift, and go to state 11
  SUBSCRIPTION  shift, and go to state 12
  ON            shift, and go to state 35
  SCHEMA        shift, and go to state 36
  SCALAR        shift, and go to state 37
  TYPE          shift, and go to state 38
  IMPLEMENTS    shift, and go to state 39
  INTERFACE     shift, and go to state 40
  UNION         shift, and go to state 41
  ENUM          shift, and go to state 42
  INPUT         shift, and go to state 43
  IDENTIFIER    shift, and go to state 44
  FRAGMENT      shift, and go to state 45
  TRUE          shift, and go to state 46
  FALSE         shift, and go to state 47

  name_without_on  go to state 34
  operation_type  go to state 48
  schema_keyword  go to state 49
  name          go to state 131

state 111

 111) object_type_definition : TYPE name implements_opt directives_list_opt _ RCURLY field_definition_list LCURLY

  RCURLY        shift, and go to state 132


state 112

  57) name_list : name _

  $default      reduce using rule 57 (name_list)


state 113

  58) name_list : name_list _ name
 113) implements_opt : IMPLEMENTS name_list _

  QUERY         shift, and go to state 10
  MUTATION      shift, and go to state 11
  SUBSCRIPTION  shift, and go to state 12
  ON            shift, and go to state 35
  SCHEMA        shift, and go to state 36
  SCALAR        shift, and go to state 37
  TYPE          shift, and go to state 38
  IMPLEMENTS    shift, and go to state 39
  INTERFACE     shift, and go to state 40
  UNION         shift, and go to state 41
  ENUM          shift, and go to state 42
  INPUT         shift, and go to state 43
  IDENTIFIER    shift, and go to state 44
  FRAGMENT      shift, and go to state 45
  TRUE          shift, and go to state 46
  FALSE         shift, and go to state 47
  $default      reduce using rule 113 (implements_opt)

  name_without_on  go to state 34
  operation_type  go to state 48
  schema_keyword  go to state 49
  name          go to state 133

state 114

 122) interface_type_definition : INTERFACE name directives_list_opt RCURLY _ field_definition_list LCURLY

  QUERY         shift, and go to state 10
  MUTATION      shift, and go to state 11
  SUBSCRIPTION  shift, and go to state 12
  ON            shift, and go to state 35
  SCHEMA        shift, and go to state 36
  SCALAR        shift, and go to state 37
  TYPE          shift, and go to state 38
  IMPLEMENTS    shift, and go to state 39
  INTERFACE     shift, and go to state 40
  UNION         shift, and go to state 41
  ENUM          shift, and go to state 42
  INPUT         shift, and go to state 43
  IDENTIFIER    shift, and go to state 44
  FRAGMENT      shift, and go to state 45
  TRUE          shift, and go to state 46
  FALSE         shift, and go to state 47

  name_without_on  go to state 34
  operation_type  go to state 48
  schema_keyword  go to state 49
  name          go to state 134
  field_definition  go to state 135
  field_definition_list  go to state 136

state 115

 125) union_type_definition : UNION name directives_list_opt EQUALS _ union_members

  QUERY         shift, and go to state 10
  MUTATION      shift, and go to state 11
  SUBSCRIPTION  shift, and go to state 12
  ON            shift, and go to state 35
  SCHEMA        shift, and go to state 36
  SCALAR        shift, and go to state 37
  TYPE          shift, and go to state 38
  IMPLEMENTS    shift, and go to state 39
  INTERFACE     shift, and go to state 40
  UNION         shift, and go to state 41
  ENUM          shift, and go to state 42
  INPUT         shift, and go to state 43
  IDENTIFIER    shift, and go to state 44
  FRAGMENT      shift, and go to state 45
  TRUE          shift, and go to state 46
  FALSE         shift, and go to state 47

  name_without_on  go to state 34
  operation_type  go to state 48
  schema_keyword  go to state 49
  name          go to state 137
  union_members  go to state 138

state 116

 126) enum_type_definition : ENUM name directives_list_opt RCURLY _ enum_name_list LCURLY

  QUERY         shift, and go to state 10
  MUTATION      shift, and go to state 11
  SUBSCRIPTION  shift, and go to state 12
  ON            shift, and go to state 141
  SCHEMA        shift, and go to state 36
  SCALAR        shift, and go to state 37
  TYPE          shift, and go to state 38
  IMPLEMENTS    shift, and go to state 39
  INTERFACE     shift, and go to state 40
  UNION         shift, and go to state 41
  ENUM          shift, and go to state 42
  INPUT         shift, and go to state 43
  IDENTIFIER    shift, and go to state 139
  FRAGMENT      shift, and go to state 140

  operation_type  go to state 142
  schema_keyword  go to state 143
  enum_name     go to state 144
  enum_name_list  go to state 145

state 117

 127) input_object_type_definition : INPUT name directives_list_opt RCURLY _ input_value_definition_list LCURLY

  QUERY         shift, and go to state 10
  MUTATION      shift, and go to state 11
  SUBSCRIPTION  shift, and go to state 12
  ON            shift, and go to state 35
  SCHEMA        shift, and go to state 36
  SCALAR        shift, and go to state 37
  TYPE          shift, and go to state 38
  IMPLEMENTS    shift, and go to state 39
  INTERFACE     shift, and go to state 40
  UNION         shift, and go to state 41
  ENUM          shift, and go to state 42
  INPUT         shift, and go to state 43
  IDENTIFIER    shift, and go to state 44
  FRAGMENT      shift, and go to state 45
  TRUE          shift, and go to state 46
  FALSE         shift, and go to state 47

  name_without_on  go to state 34
  operation_type  go to state 48
  schema_keyword  go to state 49
  name          go to state 146
  input_value_definition  go to state 147
  input_value_definition_list  go to state 148

state 118

   8) operation_definition : operation_type operation_name_opt variable_definitions_opt directives_list_opt selection_set _

  $default      reduce using rule 8 (operation_definition)


state 119

  16) variable_definitions_opt : RPAREN variable_definitions_list LPAREN _

  $default      reduce using rule 16 (variable_definitions_opt)


state 120

  18) variable_definitions_list : variable_definitions_list variable_definition _

  $default      reduce using rule 18 (variable_definitions_list)


state 121

  19) variable_definition : VAR_SIGN name _ COLON type default_value_opt

  COLON         shift, and go to state 149


state 122

  28) selection_set_opt : selection_set _

  $default      reduce using rule 28 (selection_set_opt)


state 123

  34) field : name arguments_opt directives_list_opt selection_set_opt _

  $default      reduce using rule 34 (field)


state 124

  35) field : name COLON name arguments_opt _ directives_list_opt selection_set_opt

  DIR_SIGN      shift, and go to state 77
  $default      reduce using rule 87 (directives_list_opt)

  directives_list_opt  go to state 150
  directives_list  go to state 75
  directive     go to state 76

state 125

  63) arguments_opt : RPAREN arguments_list LPAREN _

  $default      reduce using rule 63 (arguments_opt)


state 126

  65) arguments_list : arguments_list argument _

  $default      reduce using rule 65 (arguments_list)


state 127

  66) argument : name COLON _ input_value

  QUERY         shift, and go to state 10
  MUTATION      shift, and go to state 11
  SUBSCRIPTION  shift, and go to state 12
  VAR_SIGN      shift, and go to state 161
  RBRACKET      shift, and go to state 162
  RCURLY        shift, and go to state 163
  ON            shift, and go to state 141
  SCHEMA        shift, and go to state 36
  SCALAR        shift, and go to state 37
  TYPE          shift, and go to state 38
  IMPLEMENTS    shift, and go to state 39
  INTERFACE     shift, and go to state 40
  UNION         shift, and go to state 41
  ENUM          shift, and go to state 42
  INPUT         shift, and go to state 43
  IDENTIFIER    shift, and go to state 139
  FRAGMENT      shift, and go to state 140
  TRUE          shift, and go to state 155
  FALSE         shift, and go to state 156
  FLOAT         shift, and go to state 152
  INT           shift, and go to state 153
  STRING        shift, and go to state 154

  operation_type  go to state 142
  schema_keyword  go to state 143
  input_value   go to state 151
  variable      go to state 157
  list_value    go to state 158
  object_value  go to state 159
  enum_value    go to state 160
  enum_name     go to state 164

state 128

  91) directive : DIR_SIGN name arguments_opt _

  $default      reduce using rule 91 (directive)


state 129

  93) inline_fragment : ELLIPSIS ON name directives_list_opt _ selection_set

  RCURLY        shift, and go to state 13

  selection_set  go to state 165

state 130

  95) fragment_definition : FRAGMENT fragment_name_opt ON name_without_on directives_list_opt _ selection_set

  RCURLY        shift, and go to state 13

  selection_set  go to state 166

state 131

 103) operation_type_definition : operation_type COLON name _

  $default      reduce using rule 103 (operation_type_definition)


state 132

 111) object_type_definition : TYPE name implements_opt directives_list_opt RCURLY _ field_definition_list LCURLY

  QUERY         shift, and go to state 10
  MUTATION      shift, and go to state 11
  SUBSCRIPTION  shift, and go to state 12
  ON            shift, and go to state 35
  SCHEMA        shift, and go to state 36
  SCALAR        shift, and go to state 37
  TYPE          shift, and go to state 38
  IMPLEMENTS    shift, and go to state 39
  INTERFACE     shift, and go to state 40
  UNION         shift, and go to state 41
  ENUM          shift, and go to state 42
  INPUT         shift, and go to state 43
  IDENTIFIER    shift, and go to state 44
  FRAGMENT      shift, and go to state 45
  TRUE          shift, and go to state 46
  FALSE         shift, and go to state 47

  name_without_on  go to state 34
  operation_type  go to state 48
  schema_keyword  go to state 49
  field_definition_list  go to state 167
  name          go to state 134
  field_definition  go to state 135

state 133

  58) name_list : name_list name _

  $default      reduce using rule 58 (name_list)


state 134

 119) field_definition : name _ arguments_definitions_opt COLON type directives_list_opt

  RPAREN        shift, and go to state 168
  $default      reduce using rule 117 (arguments_definitions_opt)

  arguments_definitions_opt  go to state 169

state 135

 120) field_definition_list : field_definition _

  $default      reduce using rule 120 (field_definition_list)


state 136

 121) field_definition_list : field_definition_list _ field_definition
 122) interface_type_definition : INTERFACE name directives_list_opt RCURLY field_definition_list _ LCURLY

  QUERY         shift, and go to state 10
  MUTATION      shift, and go to state 11
  SUBSCRIPTION  shift, and go to state 12
  LCURLY        shift, and go to state 171
  ON            shift, and go to state 35
  SCHEMA        shift, and go to state 36
  SCALAR        shift, and go to state 37
  TYPE          shift, and go to state 38
  IMPLEMENTS    shift, and go to state 39
  INTERFACE     shift, and go to state 40
  UNION         shift, and go to state 41
  ENUM          shift, and go to state 42
  INPUT         shift, and go to state 43
  IDENTIFIER    shift, and go to state 44
  FRAGMENT      shift, and go to state 45
  TRUE          shift, and go to state 46
  FALSE         shift, and go to state 47

  name_without_on  go to state 34
  operation_type  go to state 48
  schema_keyword  go to state 49
  name          go to state 134
  field_definition  go to state 170

state 137

 123) union_members : name _

  $default      reduce using rule 123 (union_members)


state 138

 124) union_members : union_members _ PIPE name
 125) union_type_definition : UNION name directives_list_opt EQUALS union_members _

  PIPE          shift, and go to state 172
  $default      reduce using rule 125 (union_type_definition)


state 139

  52) enum_name : IDENTIFIER _

  $default      reduce using rule 52 (enum_name)


state 140

  53) enum_name : FRAGMENT _

  $default      reduce using rule 53 (enum_name)


state 141

  54) enum_name : ON _

  $default      reduce using rule 54 (enum_name)


state 142

  55) enum_name : operation_type _

  $default      reduce using rule 55 (enum_name)


state 143

  56) enum_name : schema_keyword _

  $default      reduce using rule 56 (enum_name)


state 144

  59) enum_name_list : enum_name _

  $default      reduce using rule 59 (enum_name_list)


state 145

  60) enum_name_list : enum_name_list _ enum_name
 126) enum_type_definition : ENUM name directives_list_opt RCURLY enum_name_list _ LCURLY

  QUERY         shift, and go to state 10
  MUTATION      shift, and go to state 11
  SUBSCRIPTION  shift, and go to state 12
  LCURLY        shift, and go to state 174
  ON            shift, and go to state 141
  SCHEMA        shift, and go to state 36
  SCALAR        shift, and go to state 37
  TYPE          shift, and go to state 38
  IMPLEMENTS    shift, and go to state 39
  INTERFACE     shift, and go to state 40
  UNION         shift, and go to state 41
  ENUM          shift, and go to state 42
  INPUT         shift, and go to state 43
  IDENTIFIER    shift, and go to state 139
  FRAGMENT      shift, and go to state 140

  operation_type  go to state 142
  schema_keyword  go to state 143
  enum_name     go to state 173

state 146

 114) input_value_definition : name _ COLON type default_value_opt directives_list_opt

  COLON         shift, and go to state 175


state 147

 115) input_value_definition_list : input_value_definition _

  $default      reduce using rule 115 (input_value_definition_list)


state 148

 116) input_value_definition_list : input_value_definition_list _ input_value_definition
 127) input_object_type_definition : INPUT name directives_list_opt RCURLY input_value_definition_list _ LCURLY

  QUERY         shift, and go to state 10
  MUTATION      shift, and go to state 11
  SUBSCRIPTION  shift, and go to state 12
  LCURLY        shift, and go to state 177
  ON            shift, and go to state 35
  SCHEMA        shift, and go to state 36
  SCALAR        shift, and go to state 37
  TYPE          shift, and go to state 38
  IMPLEMENTS    shift, and go to state 39
  INTERFACE     shift, and go to state 40
  UNION         shift, and go to state 41
  ENUM          shift, and go to state 42
  INPUT         shift, and go to state 43
  IDENTIFIER    shift, and go to state 44
  FRAGMENT      shift, and go to state 45
  TRUE          shift, and go to state 46
  FALSE         shift, and go to state 47

  name_without_on  go to state 34
  operation_type  go to state 48
  schema_keyword  go to state 49
  name          go to state 146
  input_value_definition  go to state 176

state 149

  19) variable_definition : VAR_SIGN name COLON _ type default_value_opt

  QUERY         shift, and go to state 10
  MUTATION      shift, and go to state 11
  SUBSCRIPTION  shift, and go to state 12
  RBRACKET      shift, and go to state 180
  ON            shift, and go to state 35
  SCHEMA        shift, and go to state 36
  SCALAR        shift, and go to state 37
  TYPE          shift, and go to state 38
  IMPLEMENTS    shift, and go to state 39
  INTERFACE     shift, and go to state 40
  UNION         shift, and go to state 41
  ENUM          shift, and go to state 42
  INPUT         shift, and go to state 43
  IDENTIFIER    shift, and go to state 44
  FRAGMENT      shift, and go to state 45
  TRUE          shift, and go to state 46
  FALSE         shift, and go to state 47

  type          go to state 178
  name          go to state 179
  name_without_on  go to state 34
  operation_type  go to state 48
  schema_keyword  go to state 49

state 150

  35) field : name COLON name arguments_opt directives_list_opt _ selection_set_opt

  RCURLY        shift, and go to state 13
  $default      reduce using rule 27 (selection_set_opt)

  selection_set  go to state 122
  selection_set_opt  go to state 181

state 151

  66) argument : name COLON input_value _

  $default      reduce using rule 66 (argument)


state 152

  67) input_value : FLOAT _

  $default      reduce using rule 67 (input_value)


state 153

  68) input_value : INT _

  $default      reduce using rule 68 (input_value)


state 154

  69) input_value : STRING _

  $default      reduce using rule 69 (input_value)


state 155

  70) input_value : TRUE _

  $default      reduce using rule 70 (input_value)


state 156

  71) input_value : FALSE _

  $default      reduce using rule 71 (input_value)


state 157

  72) input_value : variable _

  $default      reduce using rule 72 (input_value)


state 158

  73) input_value : list_value _

  $default      reduce using rule 73 (input_value)


state 159

  74) input_value : object_value _

  $default      reduce using rule 74 (input_value)


state 160

  75) input_value : enum_value _

  $default      reduce using rule 75 (input_value)


state 161

  76) variable : VAR_SIGN _ name

  QUERY         shift, and go to state 10
  MUTATION      shift, and go to state 11
  SUBSCRIPTION  shift, and go to state 12
  ON            shift, and go to state 35
  SCHEMA        shift, and go to state 36
  SCALAR        shift, and go to state 37
  TYPE          shift, and go to state 38
  IMPLEMENTS    shift, and go to state 39
  INTERFACE     shift, and go to state 40
  UNION         shift, and go to state 41
  ENUM          shift, and go to state 42
  INPUT         shift, and go to state 43
  IDENTIFIER    shift, and go to state 44
  FRAGMENT      shift, and go to state 45
  TRUE          shift, and go to state 46
  FALSE         shift, and go to state 47

  name_without_on  go to state 34
  operation_type  go to state 48
  schema_keyword  go to state 49
  name          go to state 182

state 162

  77) list_value : RBRACKET _ LBRACKET
  78) list_value : RBRACKET _ list_value_list LBRACKET

  QUERY         shift, and go to state 10
  MUTATION      shift, and go to state 11
  SUBSCRIPTION  shift, and go to state 12
  VAR_SIGN      shift, and go to state 161
  RBRACKET      shift, and go to state 162
  LBRACKET      shift, and go to state 183
  RCURLY        shift, and go to state 163
  ON            shift, and go to state 141
  SCHEMA        shift, and go to state 36
  SCALAR        shift, and go to state 37
  TYPE          shift, and go to state 38
  IMPLEMENTS    shift, and go to state 39
  INTERFACE     shift, and go to state 40
  UNION         shift, and go to state 41
  ENUM          shift, and go to state 42
  INPUT         shift, and go to state 43
  IDENTIFIER    shift, and go to state 139
  FRAGMENT      shift, and go to state 140
  TRUE          shift, and go to state 155
  FALSE         shift, and go to state 156
  FLOAT         shift, and go to state 152
  INT           shift, and go to state 153
  STRING        shift, and go to state 154

  operation_type  go to state 142
  schema_keyword  go to state 143
  variable      go to state 157
  list_value    go to state 158
  object_value  go to state 159
  enum_value    go to state 160
  list_value_list  go to state 184
  input_value   go to state 185
  enum_name     go to state 164

state 163

  81) object_value : RCURLY _ LCURLY
  82) object_value : RCURLY _ object_value_list LCURLY

  QUERY         shift, and go to state 10
  MUTATION      shift, and go to state 11
  SUBSCRIPTION  shift, and go to state 12
  LCURLY        shift, and go to state 186
  ON            shift, and go to state 35
  SCHEMA        shift, and go to state 36
  SCALAR        shift, and go to state 37
  TYPE          shift, and go to state 38
  IMPLEMENTS    shift, and go to state 39
  INTERFACE     shift, and go to state 40
  UNION         shift, and go to state 41
  ENUM          shift, and go to state 42
  INPUT         shift, and go to state 43
  IDENTIFIER    shift, and go to state 44
  FRAGMENT      shift, and go to state 45
  TRUE          shift, and go to state 46
  FALSE         shift, and go to state 47

  name_without_on  go to state 34
  operation_type  go to state 48
  schema_keyword  go to state 49
  object_value_list  go to state 187
  object_value_field  go to state 188
  name          go to state 189

state 164

  86) enum_value : enum_name _ directives_list_opt

  DIR_SIGN      shift, and go to state 77
  DIR_SIGN      [reduce using rule 87 (directives_list_opt)]
  $default      reduce using rule 87 (directives_list_opt)

  directives_list_opt  go to state 190
  directives_list  go to state 75
  directive     go to state 76

state 165

  93) inline_fragment : ELLIPSIS ON name directives_list_opt selection_set _

  $default      reduce using rule 93 (inline_fragment)


state 166

  95) fragment_definition : FRAGMENT fragment_name_opt ON name_without_on directives_list_opt selection_set _

  $default      reduce using rule 95 (fragment_definition)


state 167

 111) object_type_definition : TYPE name implements_opt directives_list_opt RCURLY field_definition_list _ LCURLY
 121) field_definition_list : field_definition_list _ field_definition

  QUERY         shift, and go to state 10
  MUTATION      shift, and go to state 11
  SUBSCRIPTION  shift, and go to state 12
  LCURLY        shift, and go to state 191
  ON            shift, and go to state 35
  SCHEMA        shift, and go to state 36
  SCALAR        shift, and go to state 37
  TYPE          shift, and go to state 38
  IMPLEMENTS    shift, and go to state 39
  INTERFACE     shift, and go to state 40
  UNION         shift, and go to state 41
  ENUM          shift, and go to state 42
  INPUT         shift, and go to state 43
  IDENTIFIER    shift, and go to state 44
  FRAGMENT      shift, and go to state 45
  TRUE          shift, and go to state 46
  FALSE         shift, and go to state 47

  name_without_on  go to state 34
  operation_type  go to state 48
  schema_keyword  go to state 49
  name          go to state 134
  field_definition  go to state 170

state 168

 118) arguments_definitions_opt : RPAREN _ input_value_definition_list LPAREN

  QUERY         shift, and go to state 10
  MUTATION      shift, and go to state 11
  SUBSCRIPTION  shift, and go to state 12
  ON            shift, and go to state 35
  SCHEMA        shift, and go to state 36
  SCALAR        shift, and go to state 37
  TYPE          shift, and go to state 38
  IMPLEMENTS    shift, and go to state 39
  INTERFACE     shift, and go to state 40
  UNION         shift, and go to state 41
  ENUM          shift, and go to state 42
  INPUT         shift, and go to state 43
  IDENTIFIER    shift, and go to state 44
  FRAGMENT      shift, and go to state 45
  TRUE          shift, and go to state 46
  FALSE         shift, and go to state 47

  name_without_on  go to state 34
  operation_type  go to state 48
  schema_keyword  go to state 49
  name          go to state 146
  input_value_definition  go to state 147
  input_value_definition_list  go to state 192

state 169

 119) field_definition : name arguments_definitions_opt _ COLON type directives_list_opt

  COLON         shift, and go to state 193


state 170

 121) field_definition_list : field_definition_list field_definition _

  $default      reduce using rule 121 (field_definition_list)


state 171

 122) interface_type_definition : INTERFACE name directives_list_opt RCURLY field_definition_list LCURLY _

  $default      reduce using rule 122 (interface_type_definition)


state 172

 124) union_members : union_members PIPE _ name

  QUERY         shift, and go to state 10
  MUTATION      shift, and go to state 11
  SUBSCRIPTION  shift, and go to state 12
  ON            shift, and go to state 35
  SCHEMA        shift, and go to state 36
  SCALAR        shift, and go to state 37
  TYPE          shift, and go to state 38
  IMPLEMENTS    shift, and go to state 39
  INTERFACE     shift, and go to state 40
  UNION         shift, and go to state 41
  ENUM          shift, and go to state 42
  INPUT         shift, and go to state 43
  IDENTIFIER    shift, and go to state 44
  FRAGMENT      shift, and go to state 45
  TRUE          shift, and go to state 46
  FALSE         shift, and go to state 47

  name_without_on  go to state 34
  operation_type  go to state 48
  schema_keyword  go to state 49
  name          go to state 194

state 173

  60) enum_name_list : enum_name_list enum_name _

  $default      reduce using rule 60 (enum_name_list)


state 174

 126) enum_type_definition : ENUM name directives_list_opt RCURLY enum_name_list LCURLY _

  $default      reduce using rule 126 (enum_type_definition)


state 175

 114) input_value_definition : name COLON _ type default_value_opt directives_list_opt

  QUERY         shift, and go to state 10
  MUTATION      shift, and go to state 11
  SUBSCRIPTION  shift, and go to state 12
  RBRACKET      shift, and go to state 180
  ON            shift, and go to state 35
  SCHEMA        shift, and go to state 36
  SCALAR        shift, and go to state 37
  TYPE          shift, and go to state 38
  IMPLEMENTS    shift, and go to state 39
  INTERFACE     shift, and go to state 40
  UNION         shift, and go to state 41
  ENUM          shift, and go to state 42
  INPUT         shift, and go to state 43
  IDENTIFIER    shift, and go to state 44
  FRAGMENT      shift, and go to state 45
  TRUE          shift, and go to state 46
  FALSE         shift, and go to state 47

  name          go to state 179
  type          go to state 195
  name_without_on  go to state 34
  operation_type  go to state 48
  schema_keyword  go to state 49

state 176

 116) input_value_definition_list : input_value_definition_list input_value_definition _

  $default      reduce using rule 116 (input_value_definition_list)


state 177

 127) input_object_type_definition : INPUT name directives_list_opt RCURLY input_value_definition_list LCURLY _

  $default      reduce using rule 127 (input_object_type_definition)


state 178

  19) variable_definition : VAR_SIGN name COLON type _ default_value_opt
  21) type : type _ BANG

  BANG          shift, and go to state 197
  EQUALS        shift, and go to state 198
  $default      reduce using rule 23 (default_value_opt)

  default_value_opt  go to state 196

state 179

  20) type : name _

  $default      reduce using rule 20 (type)


state 180

  22) type : RBRACKET _ type LBRACKET

  QUERY         shift, and go to state 10
  MUTATION      shift, and go to state 11
  SUBSCRIPTION  shift, and go to state 12
  RBRACKET      shift, and go to state 180
  ON            shift, and go to state 35
  SCHEMA        shift, and go to state 36
  SCALAR        shift, and go to state 37
  TYPE          shift, and go to state 38
  IMPLEMENTS    shift, and go to state 39
  INTERFACE     shift, and go to state 40
  UNION         shift, and go to state 41
  ENUM          shift, and go to state 42
  INPUT         shift, and go to state 43
  IDENTIFIER    shift, and go to state 44
  FRAGMENT      shift, and go to state 45
  TRUE          shift, and go to state 46
  FALSE         shift, and go to state 47

  name          go to state 179
  type          go to state 199
  name_without_on  go to state 34
  operation_type  go to state 48
  schema_keyword  go to state 49

state 181

  35) field : name COLON name arguments_opt directives_list_opt selection_set_opt _

  $default      reduce using rule 35 (field)


state 182

  76) variable : VAR_SIGN name _

  $default      reduce using rule 76 (variable)


state 183

  77) list_value : RBRACKET LBRACKET _

  $default      reduce using rule 77 (list_value)


state 184

  78) list_value : RBRACKET list_value_list _ LBRACKET
  80) list_value_list : list_value_list _ input_value

  QUERY         shift, and go to state 10
  MUTATION      shift, and go to state 11
  SUBSCRIPTION  shift, and go to state 12
  VAR_SIGN      shift, and go to state 161
  RBRACKET      shift, and go to state 162
  LBRACKET      shift, and go to state 200
  RCURLY        shift, and go to state 163
  ON            shift, and go to state 141
  SCHEMA        shift, and go to state 36
  SCALAR        shift, and go to state 37
  TYPE          shift, and go to state 38
  IMPLEMENTS    shift, and go to state 39
  INTERFACE     shift, and go to state 40
  UNION         shift, and go to state 41
  ENUM          shift, and go to state 42
  INPUT         shift, and go to state 43
  IDENTIFIER    shift, and go to state 139
  FRAGMENT      shift, and go to state 140
  TRUE          shift, and go to state 155
  FALSE         shift, and go to state 156
  FLOAT         shift, and go to state 152
  INT           shift, and go to state 153
  STRING        shift, and go to state 154

  operation_type  go to state 142
  schema_keyword  go to state 143
  variable      go to state 157
  list_value    go to state 158
  object_value  go to state 159
  enum_value    go to state 160
  input_value   go to state 201
  enum_name     go to state 164

state 185

  79) list_value_list : input_value _

  $default      reduce using rule 79 (list_value_list)


state 186

  81) object_value : RCURLY LCURLY _

  $default      reduce using rule 81 (object_value)


state 187

  82) object_value : RCURLY object_value_list _ LCURLY
  84) object_value_list : object_value_list _ object_value_field

  QUERY         shift, and go to state 10
  MUTATION      shift, and go to state 11
  SUBSCRIPTION  shift, and go to state 12
  LCURLY        shift, and go to state 202
  ON            shift, and go to state 35
  SCHEMA        shift, and go to state 36
  SCALAR        shift, and go to state 37
  TYPE          shift, and go to state 38
  IMPLEMENTS    shift, and go to state 39
  INTERFACE     shift, and go to state 40
  UNION         shift, and go to state 41
  ENUM          shift, and go to state 42
  INPUT         shift, and go to state 43
  IDENTIFIER    shift, and go to state 44
  FRAGMENT      shift, and go to state 45
  TRUE          shift, and go to state 46
  FALSE         shift, and go to state 47

  name_without_on  go to state 34
  operation_type  go to state 48
  schema_keyword  go to state 49
  object_value_field  go to state 203
  name          go to state 189

state 188

  83) object_value_list : object_value_field _

  $default      reduce using rule 83 (object_value_list)


state 189

  85) object_value_field : name _ COLON input_value

  COLON         shift, and go to state 204


state 190

  86) enum_value : enum_name directives_list_opt _

  $default      reduce using rule 86 (enum_value)


state 191

 111) object_type_definition : TYPE name implements_opt directives_list_opt RCURLY field_definition_list LCURLY _

  $default      reduce using rule 111 (object_type_definition)


state 192

 116) input_value_definition_list : input_value_definition_list _ input_value_definition
 118) arguments_definitions_opt : RPAREN input_value_definition_list _ LPAREN

  QUERY         shift, and go to state 10
  MUTATION      shift, and go to state 11
  SUBSCRIPTION  shift, and go to state 12
  LPAREN        shift, and go to state 205
  ON            shift, and go to state 35
  SCHEMA        shift, and go to state 36
  SCALAR        shift, and go to state 37
  TYPE          shift, and go to state 38
  IMPLEMENTS    shift, and go to state 39
  INTERFACE     shift, and go to state 40
  UNION         shift, and go to state 41
  ENUM          shift, and go to state 42
  INPUT         shift, and go to state 43
  IDENTIFIER    shift, and go to state 44
  FRAGMENT      shift, and go to state 45
  TRUE          shift, and go to state 46
  FALSE         shift, and go to state 47

  name_without_on  go to state 34
  operation_type  go to state 48
  schema_keyword  go to state 49
  name          go to state 146
  input_value_definition  go to state 176

state 193

 119) field_definition : name arguments_definitions_opt COLON _ type directives_list_opt

  QUERY         shift, and go to state 10
  MUTATION      shift, and go to state 11
  SUBSCRIPTION  shift, and go to state 12
  RBRACKET      shift, and go to state 180
  ON            shift, and go to state 35
  SCHEMA        shift, and go to state 36
  SCALAR        shift, and go to state 37
  TYPE          shift, and go to state 38
  IMPLEMENTS    shift, and go to state 39
  INTERFACE     shift, and go to state 40
  UNION         shift, and go to state 41
  ENUM          shift, and go to state 42
  INPUT         shift, and go to state 43
  IDENTIFIER    shift, and go to state 44
  FRAGMENT      shift, and go to state 45
  TRUE          shift, and go to state 46
  FALSE         shift, and go to state 47

  name          go to state 179
  type          go to state 206
  name_without_on  go to state 34
  operation_type  go to state 48
  schema_keyword  go to state 49

state 194

 124) union_members : union_members PIPE name _

  $default      reduce using rule 124 (union_members)


state 195

  21) type : type _ BANG
 114) input_value_definition : name COLON type _ default_value_opt directives_list_opt

  BANG          shift, and go to state 197
  EQUALS        shift, and go to state 198
  $default      reduce using rule 23 (default_value_opt)

  default_value_opt  go to state 207

state 196

  19) variable_definition : VAR_SIGN name COLON type default_value_opt _

  $default      reduce using rule 19 (variable_definition)


state 197

  21) type : type BANG _

  $default      reduce using rule 21 (type)


state 198

  24) default_value_opt : EQUALS _ input_value

  QUERY         shift, and go to state 10
  MUTATION      shift, and go to state 11
  SUBSCRIPTION  shift, and go to state 12
  VAR_SIGN      shift, and go to state 161
  RBRACKET      shift, and go to state 162
  RCURLY        shift, and go to state 163
  ON            shift, and go to state 141
  SCHEMA        shift, and go to state 36
  SCALAR        shift, and go to state 37
  TYPE          shift, and go to state 38
  IMPLEMENTS    shift, and go to state 39
  INTERFACE     shift, and go to state 40
  UNION         shift, and go to state 41
  ENUM          shift, and go to state 42
  INPUT         shift, and go to state 43
  IDENTIFIER    shift, and go to state 139
  FRAGMENT      shift, and go to state 140
  TRUE          shift, and go to state 155
  FALSE         shift, and go to state 156
  FLOAT         shift, and go to state 152
  INT           shift, and go to state 153
  STRING        shift, and go to state 154

  input_value   go to state 208
  operation_type  go to state 142
  schema_keyword  go to state 143
  variable      go to state 157
  list_value    go to state 158
  object_value  go to state 159
  enum_value    go to state 160
  enum_name     go to state 164

state 199

  21) type : type _ BANG
  22) type : RBRACKET type _ LBRACKET

  BANG          shift, and go to state 197
  LBRACKET      shift, and go to state 209


state 200

  78) list_value : RBRACKET list_value_list LBRACKET _

  $default      reduce using rule 78 (list_value)


state 201

  80) list_value_list : list_value_list input_value _

  $default      reduce using rule 80 (list_value_list)


state 202

  82) object_value : RCURLY object_value_list LCURLY _

  $default      reduce using rule 82 (object_value)


state 203

  84) object_value_list : object_value_list object_value_field _

  $default      reduce using rule 84 (object_value_list)


state 204

  85) object_value_field : name COLON _ input_value

  QUERY         shift, and go to state 10
  MUTATION      shift, and go to state 11
  SUBSCRIPTION  shift, and go to state 12
  VAR_SIGN      shift, and go to state 161
  RBRACKET      shift, and go to state 162
  RCURLY        shift, and go to state 163
  ON            shift, and go to state 141
  SCHEMA        shift, and go to state 36
  SCALAR        shift, and go to state 37
  TYPE          shift, and go to state 38
  IMPLEMENTS    shift, and go to state 39
  INTERFACE     shift, and go to state 40
  UNION         shift, and go to state 41
  ENUM          shift, and go to state 42
  INPUT         shift, and go to state 43
  IDENTIFIER    shift, and go to state 139
  FRAGMENT      shift, and go to state 140
  TRUE          shift, and go to state 155
  FALSE         shift, and go to state 156
  FLOAT         shift, and go to state 152
  INT           shift, and go to state 153
  STRING        shift, and go to state 154

  operation_type  go to state 142
  schema_keyword  go to state 143
  variable      go to state 157
  list_value    go to state 158
  object_value  go to state 159
  enum_value    go to state 160
  input_value   go to state 210
  enum_name     go to state 164

state 205

 118) arguments_definitions_opt : RPAREN input_value_definition_list LPAREN _

  $default      reduce using rule 118 (arguments_definitions_opt)


state 206

  21) type : type _ BANG
 119) field_definition : name arguments_definitions_opt COLON type _ directives_list_opt

  BANG          shift, and go to state 197
  DIR_SIGN      shift, and go to state 77
  $default      reduce using rule 87 (directives_list_opt)

  directives_list  go to state 75
  directive     go to state 76
  directives_list_opt  go to state 211

state 207

 114) input_value_definition : name COLON type default_value_opt _ directives_list_opt

  DIR_SIGN      shift, and go to state 77
  $default      reduce using rule 87 (directives_list_opt)

  directives_list  go to state 75
  directive     go to state 76
  directives_list_opt  go to state 212

state 208

  24) default_value_opt : EQUALS input_value _

  $default      reduce using rule 24 (default_value_opt)


state 209

  22) type : RBRACKET type LBRACKET _

  $default      reduce using rule 22 (type)


state 210

  85) object_value_field : name COLON input_value _

  $default      reduce using rule 85 (object_value_field)


state 211

 119) field_definition : name arguments_definitions_opt COLON type directives_list_opt _

  $default      reduce using rule 119 (field_definition)


state 212

 114) input_value_definition : name COLON type default_value_opt directives_list_opt _

  $default      reduce using rule 114 (input_value_definition)

